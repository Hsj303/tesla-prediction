{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 457,
   "id": "a0a7f845",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 458,
   "id": "6db04755",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('/home/hsj/TSLA.csv')\n",
    "## csv 읽기\n",
    "df.tail()\n",
    "#min-max 정규화\n",
    "def minmax(x):\n",
    "    a=min(x)\n",
    "    b=max(x)\n",
    "    x=np.array(x)\n",
    "    #mean=np.mean(x)\n",
    "    #std=np.std(x)\n",
    "    print('max',a)\n",
    "    print('min',b)\n",
    "    return (x-a)/(b-a)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 459,
   "id": "7475ea80",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(30,)\n",
      "(30,)\n",
      "(30,)\n",
      "(30,)\n",
      "(30,)\n",
      "(30,)\n",
      "(30,)\n",
      "max 168.630005\n",
      "min 234.050003\n",
      "max 170.919998\n",
      "min 237.399994\n",
      "max 166.190002\n",
      "min 227.279999\n",
      "max 167.869995\n",
      "min 228.520004\n",
      "max 167.869995\n",
      "min 228.520004\n",
      "max 50672700\n",
      "min 132703000\n",
      "max 167.869995\n",
      "min 228.520004\n",
      "194.759995\n",
      "194.699997\n"
     ]
    }
   ],
   "source": [
    "## 테스트 데이터셋\n",
    "#X = np.array(df.drop(['Prediction'], axis = 1))\n",
    "x1= np.array(df['Open'])\n",
    "x2= np.array(df['High'])\n",
    "x3= np.array(df['Low'])\n",
    "x4= np.array(df['Close'])\n",
    "x5= np.array(df['Adj Close'])\n",
    "x6= np.array(df['Volume'])\n",
    "y= np.array(df['Close'])\n",
    "\n",
    "x1_pred= np.array(df['Open'])\n",
    "x2_pred= np.array(df['High'])\n",
    "x3_pred= np.array(df['Low'])\n",
    "x4_pred= np.array(df['Close'])\n",
    "x5_pred= np.array(df['Adj Close'])\n",
    "x6_pred= np.array(df['Volume'])\n",
    "y_pred= np.array(df['Close'])\n",
    "def days(x):\n",
    "    x=np.array(x)\n",
    "    x=x[222:252]\n",
    "    print(x.shape)\n",
    "    #print(x.len)\n",
    "    return x\n",
    "\n",
    "#def pred_pay(x):\n",
    "x1=days(x1)\n",
    "x2=days(x2)\n",
    "x3=days(x3)\n",
    "x4=days(x4)\n",
    "x5=days(x5)\n",
    "x6=days(x6)\n",
    "y=days(y)\n",
    "x1=minmax(x1)\n",
    "x2=minmax(x2)\n",
    "x3=minmax(x3)\n",
    "x4=minmax(x4)\n",
    "x5=minmax(x5)\n",
    "x6=minmax(x6)\n",
    "y=minmax(y)\n",
    "#test data 만들기\n",
    "\n",
    "x1_pred=x1_pred[252]\n",
    "x2_pred=x2_pred[252]\n",
    "x3_pred=x3_pred[252]\n",
    "x4_pred=x4_pred[252]\n",
    "x5_pred=x5_pred[252]\n",
    "x6_pred=x6_pred[252]\n",
    "y_pred=y_pred[252]\n",
    "#y는 학습에 안쓰임.\n",
    "print(x2_pred)\n",
    "x1_pred=(x1_pred-168.63)/(234.05-168.63)\n",
    "x2_pred=(x2_pred-170.919998)/(237.399994-170.919998)\n",
    "x3_pred=(x3_pred-166.190002)/(227.279999-166.190002)\n",
    "x4_pred=(x4_pred-167.869995)/(228.520004-167.869995)\n",
    "x5_pred=(x5_pred-167.869995)/(228.520004-167.869995)\n",
    "x6_pred=(x6_pred-50672700)/(132703000-50672700)\n",
    "y_test_pred=(y_pred-167.869995)/(228.520004-167.869995)\n",
    "print(y_pred)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e2d82a26",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 460,
   "id": "0c50acaf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[4.59613396e-03 1.23166930e-02 1.91057946e-03 3.61746351e-02\n",
      " 2.15416631e-02 7.05002304e-02 2.55885088e-02 7.86641768e-05\n",
      " 1.74828433e-02 1.08135663e-02 1.33208095e-04 1.01623469e-02\n",
      " 1.66484092e-02 2.96013682e-02 1.69321271e-02 3.21346019e-06\n",
      " 3.17971632e-02 2.66484394e-03 3.91244692e-02 1.33258864e-04\n",
      " 4.50216801e-04 1.27040321e-03 3.21666811e-04 2.29065072e-03\n",
      " 1.21801732e-02 1.13136419e-03 3.14174329e-02 1.59238092e-05\n",
      " 5.61846853e-03 1.32432488e-03]\n"
     ]
    }
   ],
   "source": [
    "## 모델\n",
    "class H():\n",
    "    def __init__(self,w1,w2,w3,w4,w5,w6,b): \n",
    "\n",
    "        self.w1=w1\n",
    "        self.w2=w2\n",
    "        self.w3=w3\n",
    "        self.w4=w4\n",
    "        self.w5=w5\n",
    "        self.w6=w6\n",
    "        self.b=b\n",
    "    def forward(self,x1,x2,x3,x4,x5,x6):\n",
    "        return x1*self.w1+x2*self.w2+x3*self.w3+x4*self.w4+x5*self.w5+x6*self.w6+self.b\n",
    "\n",
    "h=H(1,1,1,1,1,1,1)\n",
    "a=h.forward(1,1,1,1,1,1)\n",
    "print((x1-y)**2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 461,
   "id": "88700a69",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "w61 -0.000514763235680428\n",
      "0\n",
      "error 1.9407646603274316\n",
      "[-0.80698312 -0.80852204 -0.81351697 -0.81276758 -0.81383947 -0.81015787\n",
      " -0.80751237 -0.8054947  -0.80681766 -0.80618825 -0.80402769 -0.80814887\n",
      " -0.81076159 -0.81085007 -0.81545733 -0.82012907 -0.82238389 -0.82168633\n",
      " -0.82064366 -0.82003049 -0.8183208  -0.82078173 -0.82302559 -0.82372855\n",
      " -0.82760916 -0.82888107 -0.82537682 -0.82299008 -0.82352116 -0.82340006]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "1000\n",
      "error 0.0010447137556869913\n",
      "[0.893715   0.87497386 0.67722857 0.72068746 0.68513985 0.86088398\n",
      " 0.93138084 0.96019392 0.95884033 0.96574611 1.01715983 0.81664458\n",
      " 0.76082286 0.71346335 0.53007747 0.40766096 0.23876103 0.3663966\n",
      " 0.42090348 0.3788161  0.44753048 0.31123518 0.23035595 0.19437367\n",
      " 0.0211749  0.00165323 0.20993546 0.21721463 0.23932477 0.21510869]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "2000\n",
      "error 0.0004331379893886042\n",
      "[0.88068063 0.88381906 0.66264928 0.73706819 0.68914169 0.87116212\n",
      " 0.93334199 0.95698092 0.96823805 0.97342912 1.00995086 0.80555404\n",
      " 0.77499646 0.68519163 0.51234534 0.39389383 0.20827032 0.35915039\n",
      " 0.43052412 0.38009778 0.4469947  0.31919397 0.24653404 0.20140755\n",
      " 0.01847044 0.02021311 0.2241935  0.23759311 0.24764323 0.21907988]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "3000\n",
      "error 0.0002027072858390276\n",
      "[0.87287044 0.88812437 0.6595732  0.74684412 0.69526268 0.88195917\n",
      " 0.93709539 0.95336848 0.97448994 0.97693471 1.00436292 0.79592672\n",
      " 0.78001243 0.6703207  0.50161954 0.39104271 0.19291165 0.36112998\n",
      " 0.44049901 0.38010302 0.44610964 0.31817507 0.24971744 0.20063274\n",
      " 0.01291195 0.02560231 0.23440275 0.24092996 0.25102406 0.21775126]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "4000\n",
      "error 0.0001033736733182858\n",
      "[0.8678982  0.89075038 0.65821819 0.75315881 0.69973719 0.88941778\n",
      " 0.9397192  0.95080796 0.97874635 0.97906914 1.00055668 0.78936323\n",
      " 0.78273832 0.66111054 0.49470862 0.38986484 0.18332063 0.36329788\n",
      " 0.44745902 0.38002305 0.44539778 0.31681066 0.25095736 0.19958949\n",
      " 0.00883978 0.02836999 0.24115659 0.24202804 0.25289967 0.21644116]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "5000\n",
      "error 5.971267353769106e-05\n",
      "[0.86471349 0.89242469 0.65733725 0.75730705 0.70279128 0.89428284\n",
      " 0.94134978 0.94908396 0.98169965 0.98046006 0.99799817 0.7850396\n",
      " 0.78438719 0.65524683 0.49020432 0.3891648  0.17703684 0.36492578\n",
      " 0.45208224 0.37997131 0.44484701 0.31584258 0.25166556 0.19891304\n",
      " 0.00611696 0.03009887 0.24556205 0.24266432 0.25398965 0.21553545]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "6000\n",
      "error 3.991090734158563e-05\n",
      "[0.86268731 0.89349403 0.65669533 0.76004933 0.7048756  0.89740897\n",
      " 0.94230659 0.94792444 0.98379578 0.98138165 0.99626635 0.78220662\n",
      " 0.78538247 0.65152663 0.4872628  0.38870751 0.17286486 0.36612152\n",
      " 0.45513638 0.37994702 0.44440952 0.31520349 0.25210974 0.19853491\n",
      " 0.00431897 0.03122469 0.24842357 0.24311012 0.25459242 0.21493812]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "7000\n",
      "error 3.0383032567883913e-05\n",
      "[0.86141519 0.89417043 0.6562041  0.76187298 0.70631887 0.89939602\n",
      " 0.9428242  0.9471368  0.98532558 0.98199777 0.99507786 0.78035096\n",
      " 0.7859591  0.64919887 0.48534125 0.38840092 0.17006994 0.36702157\n",
      " 0.4571597  0.37994127 0.44404945 0.31478713 0.25239105 0.19835592\n",
      " 0.00313061 0.03196473 0.25027592 0.24344247 0.25488347 0.21454723]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "8000\n",
      "error 2.5322062599315762e-05\n",
      "[0.86063367 0.8945908  0.65581309 0.7630954  0.70733983 0.90064051\n",
      " 0.94305862 0.9465935  0.98647926 0.98241379 0.99424658 0.7791345\n",
      " 0.78626579 0.64777686 0.484086   0.38819184 0.16817709 0.3677227\n",
      " 0.45850807 0.3799473  0.44374278 0.3145171  0.25256724 0.19830526\n",
      " 0.00234167 0.03245339 0.25146952 0.24370048 0.25497511 0.21429172]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "9000\n",
      "error 2.224256087509442e-05\n",
      "[0.86017074 0.89484442 0.65549008 0.76392388 0.70808196 0.90140195\n",
      " 0.94311198 0.94621095 0.98738134 0.98269842 0.99365069 0.778336\n",
      " 0.78639906 0.64694315 0.48326603 0.38804632 0.16687639 0.36828917\n",
      " 0.45941451 0.3799606  0.44347363 0.31434266 0.25267512 0.19833602\n",
      " 0.00181428 0.03277765 0.25223343 0.24390851 0.25494034 0.21412467]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "10000\n",
      "error 2.0077745879072354e-05\n",
      "[0.85991411 0.89498958 0.65521398 0.76449391 0.70863916 0.9018499\n",
      " 0.94305089 0.94593449 0.98811341 0.98289654 0.99321054 0.77781082\n",
      " 0.78642179 0.64649047 0.48273041 0.38794228 0.16596529 0.36876326\n",
      " 0.46003137 0.37997824 0.44323154 0.31423058 0.2527386  0.1984176\n",
      " 0.00145827 0.03299425 0.2527173  0.24408237 0.25482667 0.21401539]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "11000\n",
      "error 1.8366979192088005e-05\n",
      "[0.85979046 0.89506438 0.65497096 0.76489405 0.7090729  0.90209507\n",
      " 0.94291872 0.94572833 0.98872897 0.98303753 0.99287397 0.77746447\n",
      " 0.78637495 0.64628352 0.48238054 0.38786531 0.16531134 0.36917279\n",
      " 0.46045822 0.37999832 0.44300958 0.31415916 0.2527733  0.19853007\n",
      " 0.00121471 0.03314027 0.25301889 0.24423245 0.254665   0.21394381]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "12000\n",
      "error 1.6908815772935743e-05\n",
      "[0.85975197 0.89509368 0.65475186 0.76518221 0.70942344 0.90220972\n",
      " 0.94274367 0.94556909 0.98926321 0.98314059 0.99260687 0.77723517\n",
      " 0.78628521 0.646234   0.48215198 0.38780602 0.16482788 0.36953608\n",
      " 0.46076017 0.3800196  0.44280312 0.31411421 0.25278942 0.1986605\n",
      " 0.00104506 0.03323995 0.25320204 0.24436558 0.25447539 0.2138968 ]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "13000\n",
      "error 1.5612837556933496e-05\n",
      "[8.59767450e-01 8.95093726e-01 6.54550644e-01 7.65396268e-01\n",
      " 7.09717170e-01 9.02240963e-01 9.42544037e-01 9.45441408e-01\n",
      " 9.89739309e-01 9.83218324e-01 9.92386868e-01 7.77082549e-01\n",
      " 7.86169881e-01 6.46284332e-01 4.82002642e-01 3.87758279e-01\n",
      " 1.64458168e-01 3.69865289e-01 4.60979752e-01 3.80041309e-01\n",
      " 4.42609059e-01 3.14086459e-01 2.52793614e-01 1.98800521e-01\n",
      " 9.24122089e-04 3.33091344e-02 2.53308440e-01 2.44486292e-01\n",
      " 2.54270808e-01 2.13865824e-01]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "14000\n",
      "error 1.4436363719023277e-05\n",
      "[8.59816599e-01 8.95075137e-01 6.54363253e-01 7.65560995e-01\n",
      " 7.09971435e-01 9.02219532e-01 9.42331634e-01 9.45335248e-01\n",
      " 9.90172612e-01 9.83278970e-01 9.92199283e-01 7.76980213e-01\n",
      " 7.86040179e-01 6.46396993e-01 4.81905010e-01 3.87718096e-01\n",
      " 1.64165055e-01 3.70168513e-01 4.61144812e-01 3.80062945e-01\n",
      " 4.42425274e-01 3.14069858e-01 2.52790225e-01 1.98944751e-01\n",
      " 8.35425822e-04 3.33581914e-02 2.53365304e-01 2.44597589e-01\n",
      " 2.54059591e-01 2.13845275e-01]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "15000\n",
      "error 1.3357402755776198e-05\n",
      "[8.59886203e-01 8.95044830e-01 6.54186970e-01 7.65692617e-01\n",
      " 7.10197651e-01 9.02165420e-01 9.42114055e-01 9.45244002e-01\n",
      " 9.90573323e-01 9.83327946e-01 9.92034467e-01 7.76910909e-01\n",
      " 7.85903334e-01 6.46547569e-01 4.81841122e-01 3.87682874e-01\n",
      " 1.63924156e-01 3.70451190e-01 4.61273553e-01 3.80084200e-01\n",
      " 4.42250305e-01 3.14060459e-01 2.52782080e-01 1.99089747e-01\n",
      " 7.68182291e-04 3.33939037e-02 2.53390385e-01 2.44701488e-01\n",
      " 2.53847072e-01 2.13831506e-01]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "16000\n",
      "error 1.236308062948606e-05\n",
      "[8.59967695e-01 8.95007320e-01 6.54019941e-01 7.65801766e-01\n",
      " 7.10403357e-01 9.02091625e-01 9.41896141e-01 9.45163324e-01\n",
      " 9.90948286e-01 9.83368815e-01 9.91886056e-01 7.76863354e-01\n",
      " 7.85763981e-01 6.46720207e-01 4.81799238e-01 3.87650930e-01\n",
      " 1.63719452e-01 3.70717019e-01 4.61377895e-01 3.80104886e-01\n",
      " 4.42083119e-01 3.14055687e-01 2.52771023e-01 1.99233335e-01\n",
      " 7.15328835e-04 3.34207124e-02 2.53395256e-01 2.44799352e-01\n",
      " 2.53636614e-01 2.13822136e-01]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "17000\n",
      "error 1.1444678482593305e-05\n",
      "[8.60055533e-01 8.94965547e-01 6.53860879e-01 7.65895417e-01\n",
      " 7.10593563e-01 9.02006567e-01 9.41680934e-01 9.45090342e-01\n",
      " 9.91302145e-01 9.83403928e-01 9.91749836e-01 7.76830165e-01\n",
      " 7.85625055e-01 6.46904643e-01 4.81771694e-01 3.87621170e-01\n",
      " 1.63540387e-01 3.70968555e-01 4.61465647e-01 3.80124896e-01\n",
      " 4.41922966e-01 3.14053863e-01 2.52758252e-01 1.99374167e-01\n",
      " 6.72235595e-04 3.34415282e-02 2.53387457e-01 2.44892121e-01\n",
      " 2.53430300e-01 2.13815609e-01]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n",
      "18000\n",
      "error 1.059549406593469e-05\n",
      "[8.60146152e-01 8.94921424e-01 6.53708872e-01 7.65978159e-01\n",
      " 7.10771616e-01 9.01915684e-01 9.41470310e-01 9.45023149e-01\n",
      " 9.91638095e-01 9.83434843e-01 9.91623001e-01 7.76806510e-01\n",
      " 7.85488393e-01 6.47094265e-01 4.81753482e-01 3.87592891e-01\n",
      " 1.63379983e-01 3.71207599e-01 4.61541932e-01 3.80144171e-01\n",
      " 4.41769283e-01 3.14053892e-01 2.52744543e-01 1.99511432e-01\n",
      " 6.35862969e-04 3.34582610e-02 2.53371889e-01 2.44980451e-01\n",
      " 2.53229383e-01 2.13810914e-01]\n",
      "[0.86265456 0.8931573  0.64979387 0.76784831 0.71525142 0.89942283\n",
      " 0.93602631 0.94344588 1.         0.98384154 0.98845842 0.77675176\n",
      " 0.78219284 0.65292663 0.48161587 0.386315   0.1602638  0.3767519\n",
      " 0.46331413 0.38054408 0.43775761 0.31409728 0.25226712 0.20313281\n",
      " 0.         0.03363576 0.25276174 0.24715587 0.24814511 0.21368516]\n"
     ]
    }
   ],
   "source": [
    "errors = []\n",
    "w1_grad = []\n",
    "w2_grad = []\n",
    "w3_grad = []\n",
    "w4_grad = []\n",
    "w5_grad = []\n",
    "w6_grad = []\n",
    "\n",
    "num_epoch=500000\n",
    "learning_rate=0.05\n",
    "\n",
    "w1 = np.random.uniform(low=-0.01, high=0.01)\n",
    "w2 = np.random.uniform(low=-0.01, high=0.01)\n",
    "w3 = np.random.uniform(low=-0.01, high=0.01)\n",
    "w4 = np.random.uniform(low=-0.01, high=0.01)\n",
    "w5 = np.random.uniform(low=-0.01, high=0.01)\n",
    "w6 = np.random.uniform(low=-0.01, high=0.01)\n",
    "b = np.random.uniform(low=-1.0, high=1.0)\n",
    "print('w61',w6 )\n",
    "for epoch in range(num_epoch):\n",
    "    # 예측값\n",
    "    h=H(w1,w2,w3,w4,w5,w6,b)\n",
    "    y_hat=h.forward(x1,x2,x3,x4,x5,x6)\n",
    "    \n",
    "    #print(y_hat)\n",
    "    error = ((y_hat - y)**2).mean()\n",
    "    #error = (abs(y_hat - y)).mean()\n",
    "    if error < 0.00001:\n",
    "        break\n",
    "    \n",
    "    # 미분값 적용 (Gradient)\n",
    "    w1 = w1 - learning_rate * np.mean(((y_hat - y) * x1))\n",
    "    w2 = w2 - learning_rate * np.mean(((y_hat - y) * x2))\n",
    "    w3 = w3 - learning_rate *np.mean(((y_hat - y) * x3))\n",
    "    w4 = w4 - learning_rate * np.mean(((y_hat - y) * x4))\n",
    "    w5 = w5 - learning_rate *np.mean(((y_hat - y) * x5))\n",
    "    w6 = w6 - learning_rate *np.mean(((y_hat - y) * x6))\n",
    "    #print('w6',w6)\n",
    "    \n",
    "    w1_grad.append(w1)\n",
    "    w2_grad.append(w2)\n",
    "    w3_grad.append(w3)\n",
    "    w4_grad.append(w4)\n",
    "    w5_grad.append(w5)\n",
    "    w6_grad.append(w6)\n",
    "    \n",
    "    b = b - learning_rate * (y_hat - y).mean()\n",
    "    \n",
    "    errors.append(error)\n",
    "    \n",
    "    if epoch % 1000 == 0:\n",
    "        #print(\"{0:2} w1 = {1:.5f}, w2 = {2:.5f}, w3 = {3:.5f},w4 = {4:.5f},w5 = {5:.5f},w6 = {6:.5f} b = {4:.5f} error = {5:.5f}\".format(epoch, w1, w2, w3, w4,w5,w6, b, error))\n",
    "        print(epoch)\n",
    "        print('error',error)\n",
    "        print(y_hat)\n",
    "        print(y)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 462,
   "id": "52b7e636",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.0004930329398568713"
      ]
     },
     "execution_count": 462,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 463,
   "id": "75bd3bce",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.3586040679063821\n",
      "0.0061931569030246585\n",
      "168.74140341958503\n"
     ]
    }
   ],
   "source": [
    "print(x2_pred)\n",
    "print(w2_pred)\n",
    "y_pred=w1_pred*x1_pred+w2_pred*x2_pred+w3_pred*x3_pred+w4_pred*x4_pred+w5_pred*x5_pred+w6_pred*x6_pred+b\n",
    "y_pred=y_pred*(228.520004-167.869995)+167.869995 #예측한 것 복원 \n",
    "y_test_pred=(y_pred-167.869995)/(228.520004-167.869995)\n",
    "y=y*(228.520004-167.869995)+167.869995\n",
    "# min max 정규화 반대 과정.\n",
    "print(y_pred)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 464,
   "id": "bd40081d",
   "metadata": {},
   "outputs": [
    {
     "ename": "IndexError",
     "evalue": "list index out of range",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "Cell \u001b[0;32mIn [464], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m w6_pred\u001b[39m=\u001b[39mw6_grad[num_epoch\u001b[39m-\u001b[39;49m\u001b[39m1\u001b[39;49m]\n\u001b[1;32m      2\u001b[0m w5_pred\u001b[39m=\u001b[39mw6_grad[num_epoch\u001b[39m-\u001b[39m\u001b[39m1\u001b[39m]\n\u001b[1;32m      3\u001b[0m w4_pred\u001b[39m=\u001b[39mw6_grad[num_epoch\u001b[39m-\u001b[39m\u001b[39m1\u001b[39m]\n",
      "\u001b[0;31mIndexError\u001b[0m: list index out of range"
     ]
    }
   ],
   "source": [
    "w6_pred=w6_grad[num_epoch-1]\n",
    "w5_pred=w6_grad[num_epoch-1]\n",
    "w4_pred=w6_grad[num_epoch-1]\n",
    "w3_pred=w6_grad[num_epoch-1]\n",
    "w2_pred=w6_grad[num_epoch-1]\n",
    "w1_pred=w6_grad[num_epoch-1]\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 470,
   "id": "c3c4aff7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 7))\n",
    "\n",
    "plt.hlines(y=0.0, xmin=0, xmax=len(w6_grad), color='r')\n",
    "plt.plot(w6_grad, color='g')\n",
    "plt.ylim(0, 1)\n",
    "plt.title('W6', fontsize=16)\n",
    "plt.legend(['W6 Change', 'W6'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "977d3e8c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c4cb13ba",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f5e4bd8d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.9.12 ('base': conda)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "vscode": {
   "interpreter": {
    "hash": "76fcdab7a93917afb0a828afe8f7c7d40513b2b113437b9c4a52ca8b09904cfe"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
